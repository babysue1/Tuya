openapi: 3.0.1
info:
  title: Authentication API
  version: 1.0.0
  description: API documentation for authentication routes.
servers:
  - url: /auth
paths:
  /login:
    post:
      summary: User login
      description: Authenticate user and return access and refresh tokens.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginCredentials'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /refresh-token:
    post:
      summary: Refresh access token
      description: Get a new access token using a refresh token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Token refreshed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPayload'
        '401':
          description: Invalid or expired refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /verify-token:
    post:
      summary: Verify token
      description: Verify the validity of a token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyTokenRequest'
      responses:
        '200':
          description: Token verification result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyTokenResponse'
        '400':
          description: Invalid request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /revoke-token:
    post:
      summary: Revoke refresh token
      description: Revoke a specific refresh token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Token revoked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '404':
          description: Token not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /logout:
    post:
      summary: Logout user
      description: Revoke the current user's refresh token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        '200':
          description: Logged out successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Failed to logout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /revoke-user-tokens:
    delete:
      summary: Revoke all user tokens
      description: Revoke all tokens for the current user (JWT required).
      security:
        - bearerAuth: []
      responses:
        '200':
          description: All user tokens revoked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Failed to revoke tokens
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid user token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /change-password:
    post:
      summary: Change user password
      description: Change the password for the current user (JWT required).
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
      responses:
        '200':
          description: Password changed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Failed to change password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid user token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginCredentials:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
        - email
        - password
    LoginResponse:
      type: object
      properties:
        profile:
          type: object
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
        - profile
        - accessToken
        - refreshToken
    TokenPayload:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
        - accessToken
        - refreshToken
    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
      required:
        - refreshToken
    ChangePasswordRequest:
      type: object
      properties:
        newPassword:
          type: string
      required:
        - newPassword
    MessageResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
      required:
        - error
    VerifyTokenRequest:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    VerifyTokenResponse:
      type: object
      properties:
        isValid:
          type: boolean
        userId:
          type: integer
          nullable: true
      required:
        - isValid

