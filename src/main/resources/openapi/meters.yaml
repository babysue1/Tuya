openapi: 3.0.1
info:
  title: Meters API
  version: 1.0.0
  description: API documentation for meter management routes.
servers:
  - url: /
paths:
  /meters:
    get:
      summary: Get all meters
      description: Retrieve a list of all meters.
      responses:
        '200':
          description: List of meters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meter'
    post:
      summary: Create a new meter
      description: Create a new meter. Returns 400 if a meter with the same id already exists.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeterCreationRequest'
      responses:
        '201':
          description: Meter created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad request (meter already exists)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
  /meters/{id}:
    get:
      summary: Get meter by ID
      description: Retrieve a meter by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Meter found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meter'
        '404':
          description: Meter not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
    put:
      summary: Update meter
      description: Update a meter by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeterCreationRequest'
      responses:
        '200':
          description: Meter updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
    delete:
      summary: Delete meter
      description: Delete a meter by its ID.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Meter deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
        '404':
          description: Meter not found or could not be deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
components:
  schemas:
    Meter:
      type: object
      properties:
        meterId:
          type: string
        name:
          type: string
        productName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        active:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - meterId
        - name
        - active
        - createdAt
        - updatedAt

    MeterCreationRequest:
      type: object
      properties:
        meterId:
          type: string
        name:
          type: string
        productName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
        active:
          type: boolean
      required:
        - meterId
        - name
        - active
        - createdAt
        - updatedAt
    MessageResponse:
      type: object
      properties:
        message:
          type: string
      required:
        - message
